{
	"info": {
		"_postman_id": "20091ed9-deb2-4b53-980f-b1bb2f3fb3d9",
		"name": "Dog CEO API",
		"description": "[https://dog.ceo/dog-api/documentation/](https://dog.ceo/dog-api/documentation/)\n\nThe GET request \"Random Dog Images\" was when I understood you can only directly get the value of a path variable in pre-request scripts. Check out the post-response script for a workaround.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41957911"
	},
	"item": [
		{
			"name": "List All Breeds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200 OK\", pm.response.to.have.status(200))",
							"pm.test(\"Response in JSON\", pm.response.to.be.json)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/breeds/list/all",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"breeds",
						"list",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Random Dog Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200 OK\", pm.response.to.have.status(200))",
							"pm.test(\"Response in JSON\", pm.response.to.be.json)",
							"pm.test(\"Response is correct\", function () {",
							"    const jsonData = pm.response.json()",
							"    pm.expect(jsonData).to.have.property(\"message\")",
							"    pm.expect(jsonData.message).to.be.a(\"string\")",
							"    pm.expect(jsonData).to.have.property(\"status\")",
							"    pm.expect(jsonData.status).to.equal(\"success\")",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/breeds/image/random",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"breeds",
						"image",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "Random Dog Images",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200 OK\", pm.response.to.have.status(200))",
							"pm.test(\"Response in JSON\", pm.response.to.be.json)",
							"pm.test(\"Response is correct\", function () {",
							"    const jsonData = pm.response.json()",
							"    pm.expect(jsonData).to.have.property(\"message\")",
							"    pm.expect(jsonData.message).to.be.an(\"array\")",
							"    //Turns out, I can only get a path variable's value in pre-request scripts, so I split 'urlString' to get the number of images.",
							"    let urlString = pm.request.url.toString().split(\"/\")",
							"    let number = parseInt(urlString[urlString.length - 1])",
							"    pm.expect(jsonData.message.length).to.equal(number)",
							"    pm.expect(jsonData).to.have.property(\"status\")",
							"    pm.expect(jsonData.status).to.equal(\"success\")",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.request.url.variables.get(\"number\"))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/breeds/image/random/:number",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"breeds",
						"image",
						"random",
						":number"
					],
					"variable": [
						{
							"key": "number",
							"value": "7",
							"description": "Max number returned is 50."
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://dog.ceo/api",
			"type": "string"
		}
	]
}